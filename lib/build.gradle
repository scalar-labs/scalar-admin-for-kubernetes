dependencies {
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "com.scalar-labs:scalar-admin:${scalarAdminVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    implementation(group: 'io.kubernetes', name: 'client-java', version: "${kubernetesClientVersion}") {
        exclude group: 'org.slf4j'
    }

    testImplementation(platform("org.junit:junit-bom:${junitVersion}"))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
}

test {
    useJUnitPlatform()
    environment "KUBECONFIG", "mykubeconfig.yml"
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task generateOutClusterPauser(type: Copy) {
    String scalarAdminVersion = "ghcr.io/scalar-labs/scalar-admin:${scalarAdminVersion}"

    from 'src/template/java/com/scalar/admin/k8s'
    into "$buildDir/generated/java/com/scalar/admin/k8s"
    filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [
        SCALAR_ADMIN_IMAGE: scalarAdminVersion,
    ])
}

sourceSets {
    main {
        java.srcDirs += "$buildDir/generated/java"
    }
    template {
        java.srcDirs = ['src/template/java']
    }
}

compileJava.dependsOn 'generateOutClusterPauser'
