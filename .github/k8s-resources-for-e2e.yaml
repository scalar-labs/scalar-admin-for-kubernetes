apiVersion: apps/v1
kind: Deployment
metadata:
  name: scalardl-ledger
  namespace: default
  labels:
    app.kubernetes.io/name: scalardl-ledger
    app.kubernetes.io/instance: scalardl
    app.kubernetes.io/app: ledger
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: scalardl-ledger
      app.kubernetes.io/instance: scalardl
      app.kubernetes.io/app: ledger
  template:
    metadata:
      labels:
        app.kubernetes.io/name: scalardl-ledger
        app.kubernetes.io/instance: scalardl
        app.kubernetes.io/app: ledger
    spec:
      restartPolicy: Always
      containers:
        - name: scalardl-ledger
          image: "ghcr.io/scalar-labs/scalar-ledger:${SCALARDL_LATEST_VERSION}"
          imagePullPolicy: Never
          ports:
            - containerPort: 50053
          env:
          - name: SCALAR_DB_CONTACT_POINTS
            value: "jdbc:mysql://localhost:3306/"
          - name: SCALAR_DB_STORAGE
            value: "jdbc"
          livenessProbe:
            exec:
              command:
              - /usr/local/bin/grpc_health_probe
              - -addr=:50051
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scalardl-auditor
  namespace: default
  labels:
    app.kubernetes.io/name: scalardl-auditor
    app.kubernetes.io/instance: scalardl-auditor
    app.kubernetes.io/app: auditor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: scalardl-auditor
      app.kubernetes.io/instance: scalardl-auditor
      app.kubernetes.io/app: auditor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: scalardl-auditor
        app.kubernetes.io/instance: scalardl-auditor
        app.kubernetes.io/app: auditor
    spec:
      restartPolicy: Always
      containers:
        - name: scalardl-audit-auditor
          image: "ghcr.io/scalar-labs/scalar-auditor:${SCALARDL_LATEST_VERSION}"
          imagePullPolicy: Never
          ports:
            - containerPort: 40053
          env:
            - name: SCALAR_DB_CONTACT_POINTS
              value: "jdbc:mysql://localhost:3306/"
            - name: SCALAR_DB_STORAGE
              value: "jdbc"
            - name: SCALAR_DL_AUDITOR_AUTHENTICATION_METHOD
              value: "hmac"
            - name: SCALAR_DL_AUDITOR_AUTHENTICATION_HMAC_CIPHER_KEY
              value: "auditor-cipher-key"
            - name: SCALAR_DL_AUDITOR_SERVERS_AUTHENTICATION_HMAC_SECRET_KEY
              value: "ledger-auditor-secret"
          livenessProbe:
            exec:
              command:
              - /usr/local/bin/grpc_health_probe
              - -addr=:40051
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: scalardl-headless
  namespace: default
  labels:
    app.kubernetes.io/name: scalardl-ledger
    app.kubernetes.io/instance: scalardl
    app.kubernetes.io/app: ledger
spec:
  type: ClusterIP
  clusterIP: None
  sessionAffinity: None
  ports:
    - name: scalardl-admin
      port: 50053
      protocol: TCP
      targetPort: 50053
  selector:
    app.kubernetes.io/name: scalardl-ledger
    app.kubernetes.io/instance: scalardl
    app.kubernetes.io/app: ledger
---
apiVersion: v1
kind: Service
metadata:
  name: scalardl-auditor-headless
  namespace: default
  labels:
    app.kubernetes.io/name: scalardl-auditor
    app.kubernetes.io/instance: scalardl-auditor
    app.kubernetes.io/app: auditor
spec:
  type: ClusterIP
  clusterIP: None
  sessionAffinity: None
  ports:
    - name: scalardl-auditor-admin
      port: 40053
      protocol: TCP
      targetPort: 40053
  selector:
    app.kubernetes.io/name: scalardl-auditor
    app.kubernetes.io/instance: scalardl-auditor
    app.kubernetes.io/app: auditor
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: java8
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: java8
rules:
  - apiGroups: ["", "apps"]
    resources: ["pods", "deployments", "services"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: java8
  namespace: default
subjects:
  - kind: ServiceAccount
    name: java8
    apiGroup: ""
roleRef:
  kind: Role
  name: java8
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: java8
spec:
  terminationGracePeriodSeconds: 0
  serviceAccountName: java8
  containers:
  - name: java8
    image: eclipse-temurin:8-jre
    command: ["sleep", "inf"]
